<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2013sp1

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" exclude-result-prefixes="xs fn">
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template match="/">
		<thread xmlns="http://www.rightnow.com/objects">
			<xsl:attribute name="xsi:schemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance" select="'http://www.rightnow.com/objects C:/Integration/RightNow/XSDs/ThreadEntryDetails.xsd'"/>
			<xsl:for-each select="*:pair[fn:namespace-uri() eq '']/*:pair[fn:namespace-uri() eq '']">
				<xsl:variable name="var1_pair" as="node()*" select="*:pair[fn:namespace-uri() eq '']"/>
				<thread_entry xmlns="">
					<xsl:for-each select="$var1_pair[(fn:string(@name) = 'acct_id')]">
						<acct_id>
							<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
						</acct_id>
					</xsl:for-each>
					<xsl:for-each select="$var1_pair[(fn:string(@name) = 'channel')]">
						<channel>
							<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
						</channel>
					</xsl:for-each>
					<xsl:for-each select="$var1_pair[(fn:string(@name) = 'entered')]">
						<entered>
							<xsl:sequence select="fn:string(.)"/>
						</entered>
					</xsl:for-each>
					<xsl:for-each select="$var1_pair[(fn:string(@name) = 'entry_type')]">
						<entry_type>
							<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
						</entry_type>
					</xsl:for-each>
					<xsl:for-each select="$var1_pair[(fn:string(@name) = 'note')]">
						<note>
							<xsl:sequence select="fn:string(.)"/>
						</note>
					</xsl:for-each>
					<xsl:for-each select="$var1_pair[(fn:string(@name) = 'seq')]">
						<seq>
							<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
						</seq>
					</xsl:for-each>
					<xsl:for-each select="$var1_pair[(fn:string(@name) = 'thread_id')]">
						<thread_id>
							<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
						</thread_id>
					</xsl:for-each>
				</thread_entry>
			</xsl:for-each>
		</thread>
	</xsl:template>
</xsl:stylesheet>
